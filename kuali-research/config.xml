<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>-1</daysToKeep>
        <numToKeep>5</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.ChoiceParameterDefinition>
          <name>LANDSCAPE</name>
          <description>The landscape to deploy to.</description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>ci</string>
              <string>sandbox</string>
              <string>qa</string>
              <string>stage</string>
              <string>prod</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>DEBUG</name>
          <description>If true, prints out would be calls to other jobs, but does not go through with them.</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>set +x

CLI=/var/lib/jenkins/jenkins-cli.jar
HOST=http://localhost:8080/
DOCKER_PUSH_LOG_FILE=/var/lib/jenkins/jobs/kuali-research-3-docker-push-image/lastSuccessful/log
LANDSCAPE=$(echo $LANDSCAPE | tr &apos;[:upper:]&apos; &apos;[:lower:]&apos;)
BRANCH=&quot;&quot;
EC2_IDS=()
# By convention, we are calling the repository name within the registry the same as the artifactid of the pom file 
# that the repository keeps images for. However if we want to break this rule and cause downstream jobs to push 
# and pull from the registry referencing a different repository name, then set this value accordingly.
#POM_ARTIFACTID_OVERRIDE=&quot;kuali-research&quot;

case &quot;$LANDSCAPE&quot; in
   &quot;sandbox&quot;)
      BRANCH=&quot;master&quot;
      POM_ARTIFACTID_OVERRIDE=&quot;&quot; # Configures downstream jobs to push and pull from a repository in the
                                 # remote repo whose name matches the artifact id found in the pom file.
      EC2_IDS=(&quot;i-099de1c5407493f9b&quot; &quot;i-0c2d2ef87e98f2088&quot;);;
   &quot;ci&quot;)
      BRANCH=&quot;bu-master&quot;
      EC2_IDS=(&quot;i-0258a5f2a87ba7972&quot; &quot;i-0511b83a249cd9fb1&quot;);;      
   &quot;qa&quot;)
      EC2_IDS=(&quot;i-011ccd29dec6c6d10&quot;);;
   &quot;stage&quot;)
      EC2_IDS=(&quot;i-090d188ea237c8bcf&quot; &quot;i-0cb479180574b4ba2&quot;);;
   &quot;prod&quot;)
      EC2_IDS=(&quot;i-0534c4e38e6a24009&quot; &quot;i-07d7b5f3e629e89ae&quot;);;
esac

for i in $(seq ${#EC2_IDS[@]}); do
   EC2_ID=${EC2_IDS[i-1]}
   if ( [ $i -eq 1 ] &amp;&amp; [ &quot;$BRANCH&quot; != &quot;&quot; ] ); then
      # A) FULL BUILD AND DEPLOY (maven &amp; docker)
      #    (NOTE: several parameters are ommitted to invoke their default values.)
      CMD=&quot;java -jar ${CLI} -s ${HOST} build &apos;kuali-research-1-build-war&apos; -v -f \
         -p BRANCH=${BRANCH} \
         -p EC2_INSTANCE_ID=${EC2_ID}&quot;
   elif ( [ ! -f $DOCKER_PUSH_LOG_FILE ] &amp;&amp; [ &quot;$DEBUG&quot; == false ] ); then
      echo &quot;PROBLEM!!! Cannot determine registry image to reference.&quot;;
      echo &quot;Cannot find log for most recent docker push job:&quot;;
      echo &quot;       ${DOCKER_PUSH_LOG_FILE}&quot;;
      echo &quot;Cancelling build...&quot;;
      exit 1;
   else
      # B) DEPLOY ONLY (docker) 
      #    Use aws CLI only to get new docker container running against updated image on target EC2 instance.
      #    It is assumed the corresponding docker image is already in the registry and will be the last one put there by jenkins.
      #    (NOTE: any parameters ommitted will invoke the default values.)

      POM_VERSION=$(cat ${DOCKER_PUSH_LOG_FILE} | grep -P &apos;digest&apos; | cut -d &apos;:&apos; -f 1 | tr -d &apos;[[:space:]]&apos;);

      CMD=&quot;java -jar ${CLI} -s ${HOST} build &apos;kuali-research-4-docker-run-container&apos; -v -f \
         -p EC2_INSTANCE_ID=${EC2_ID} \
         -p POM_VERSION=${POM_VERSION}&quot;
   fi
   
   if [ -n &quot;${POM_ARTIFACTID_OVERRIDE}&quot; ] ; then 
      CMD=&quot;$CMD -p POM_ARTIFACTID=${POM_ARTIFACTID_OVERRIDE}&quot;;
   fi
   
   [ &quot;$DEBUG&quot; == true ] &amp;&amp; echo $CMD || eval $CMD

done

set -x</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>