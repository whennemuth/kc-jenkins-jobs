<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>-1</daysToKeep>
        <numToKeep>5</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.ChoiceParameterDefinition>
          <name>LANDSCAPE</name>
          <description>
LANDSCAPE - [PROFILE : EC2 Instance IDs]

   1) PROFILE:
       -------------
       Used in contacting other EC2 instances.
       The profile identifies stored credentials for communicating with these EC2 instances using the aws cli and the ssm-agent.

   2) EC2 Instance IDs: 
       -----------------------
       The EC2 Instance id(s), separated by commas if multiple, that indicate the application server(s) running in the landscape.
       These EC2 instances are each running a docker container for kuali-research which will be restarted based on a new docker image.</description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>ci : i-0258a5f2a87ba7972</string>
              <string>sandbox : i-099de1c5407493f9b</string>
              <string>qa : i-011ccd29dec6c6d10</string>
              <string>stage : i-090d188ea237c8bcf, i-0cb479180574b4ba2</string>
              <string>prod : ??? : ???</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command># set +x

CLI=/var/lib/jenkins/jenkins-cli.jar
HOST=http://localhost:8080/
DOCKER_PUSH_LOG_FILE=/var/lib/jenkins/jobs/kuali-research-3-docker-push-image/lastSuccessful/log

# For sample string &quot;myprofile : myec2id1, myec2id2&quot;, &quot;myprofile&quot; is extracted. 
PROFILE=$(echo &quot;${LANDSCAPE}&quot; | cut -d &quot;:&quot; -f 1 | tr -d &apos;[[:space:]]&apos;)
# For sample string &quot;myprofile : myec2id1, myec2id2&quot;, &quot;myec2id1, myec2id2&quot; is extracted. 
EC2_IDS=$(echo &quot;${LANDSCAPE}&quot; | cut -d &quot;:&quot; -f 2 | tr -d &apos;[[:space:]]&apos;)
EC2_IDX=1

while : 
do 
   # For sample string &quot;myec2id1, myec2id2&quot;, &quot;myec2id1&quot; is extracted where THIS_EC2_ID = 1. 
   # For sample string &quot;myec2id1, myec2id2&quot;, &quot;myec2id1&quot; is extracted where THIS_EC2_ID = 2.
   # etc...
   THIS_EC2_ID=$(echo &quot;${EC2_IDS}&quot; | cut -d &quot;,&quot; -f ${EC2_IDX} | tr -d &apos;[[:space:]]&apos;);
   ((EC2_IDX++));
   NEXT_EC2_ID=$(echo &quot;${EC2_IDS}&quot; | cut -d &quot;,&quot; -f ${EC2_IDX} | tr -d &apos;[[:space:]]&apos;);
   
   if ([ &quot;$PROFILE&quot; == &quot;ci&quot; ] || [ &quot;$PROFILE&quot; == &quot;sandbox&quot; ]) ; then
   
      if ([ &quot;$PROFILE&quot; == &quot;ci&quot; ]) ; then BRANCH=&quot;bu-mastercopy&quot;; else BRANCH=&quot;mastercopy&quot;; fi
      
      # A) FULL BUILD AND DEPLOY (maven &amp; docker)
      # (NOTE: several parameters are ommitted to invoke their default values.)
      java -jar ${CLI} -s ${HOST} build &apos;kuali-research-1-build-war&apos; -v -f \
         -p BRANCH=${BRANCH} \
         -p EC2_INSTANCE_ID=${THIS_EC2_ID} \
         -p PROFILE=${PROFILE};      
   elif [ ! -f $DOCKER_PUSH_LOG_FILE ] ; then
      echo &quot;PROBLEM!!! Cannot determine registry image to reference.&quot;;
      echo &quot;Cannot find log for most recent docker push job:&quot;;
      echo &quot;       ${DOCKER_PUSH_LOG_FILE}&quot;;
      echo &quot;Cancelling build...&quot;;
      exit 1;
   else
      # B) DEPLOY ONLY (docker) 
      #    Use aws CLI only to get new docker container running against updated image on target EC2 instance.
      #    It is assumed the corresponding docker image is already in the registry and will be the last one put there by jenkins.
      # (NOTE: any parameters ommitted will invoke the default values.)
      
      POM_VERSION=cat ${DOCKER_PUSH_LOG_FILE} | grep -P &apos;digest&apos; | cut -d &apos;:&apos; -f 1 | tr -d &apos;[[:space:]]&apos;;
      java -jar ${CLI} -s ${HOST} build &apos;kuali-research-4-docker-run-container&apos; -v -f \
         -p EC2_INSTANCE_ID=${EC2_INSTANCE_ID} \
         -p POM_VERSION=${POM_VERSION} \
         -p PROFILE=${PROFILE};   
   fi   
   
   # With n=EC2_IDX+1, set the nth element of the EC2_IDS variable split by &quot;,&quot; and then trimmed for whitespace
   # echo &quot;THIS_EC2_ID = &apos;${THIS_EC2_ID}&apos; and NEXT_EC2_ID=&apos;${NEXT_EC2_ID}&apos;&quot;;
   if ([ &quot;$THIS_EC2_ID&quot; == &quot;$NEXT_EC2_ID&quot; ] || [ &quot;$NEXT_EC2_ID&quot; == &quot;&quot; ]) ; then
      break;
   fi
   
   # If an issue leads to an endless loop, this will exit upon the 10th (arbitrary) iteration
   if [ ${EC2_IDX} -eq 10 ] ; then
      exit 1;
      break;
   fi
done

# set -x</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>