<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description>THIS IS THE STARTING POINT FOR A MANUAL DEPLOYMENT OF THE RESEARCH PDF APPLICATION&#xd;
&#xd;
No docker images are built. Instead, the docker images are acquired from the dockerhub account of kualico.&#xd;
Each docker image acquired from kualico is uploaded to our own AWS ecr repository for research-pdf.&#xd;
A listing of research-pdf images (each a different version) displays choices of what docker image to have deployed.&#xd;
What is deploying an image? The application host ec2 instance(s) are issued a command to download the image &#xd;
selected in this job from the ecr and restart docker containers for research-pdf from them.&#xd;
&#xd;
There is the additional option to update the ecr registry with a new image from kualico.&#xd;
If this option is selected, a new picklist appears offering choices for the research-pdf image versions available the&#xd;
kualico dockerhub account. If one of these is chosen, it is downloaded, tagged, and uploaded to our ecr.&#xd;
The job then resumes as normal.</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>-1</daysToKeep>
        <numToKeep>5</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <org.biouno.unochoice.DynamicReferenceParameter plugin="uno-choice@2.1">
          <name>DEBUG</name>
          <description></description>
          <randomName>choice-parameter-8441679458654903</randomName>
          <visibleItemCount>1</visibleItemCount>
          <script class="org.biouno.unochoice.model.GroovyScript">
            <secureScript plugin="script-security@1.54">
              <script>def opendiv = &quot;&lt;div style=&apos;font-size:14px;font-family:verdana; width:600px; align:left;&apos;&gt;&quot;
def checkbox = &quot;&lt;input type=&apos;checkbox&apos; name=&apos;value&apos; value=&apos;true&apos; checked style=&apos;display:inline;&apos;&gt;&quot;
def desc = &quot;Prints out would be calls to other jobs, but do not go through with them.&quot;
def closediv = &quot;&lt;/div&gt;&quot;
return opendiv + checkbox + desc + closediv</script>
              <sandbox>false</sandbox>
            </secureScript>
            <secureFallbackScript plugin="script-security@1.54">
              <script>return &quot;Error creating debug selection&quot;</script>
              <sandbox>false</sandbox>
            </secureFallbackScript>
          </script>
          <projectName>kuali-pdf</projectName>
          <parameters class="linked-hash-map"/>
          <referencedParameters></referencedParameters>
          <choiceType>ET_FORMATTED_HTML</choiceType>
          <omitValueField>false</omitValueField>
        </org.biouno.unochoice.DynamicReferenceParameter>
        <org.biouno.unochoice.DynamicReferenceParameter plugin="uno-choice@2.1">
          <name>VERBOSE</name>
          <description></description>
          <randomName>choice-parameter-8441679459948153</randomName>
          <visibleItemCount>1</visibleItemCount>
          <script class="org.biouno.unochoice.model.GroovyScript">
            <secureScript plugin="script-security@1.54">
              <script>def opendiv = &quot;&lt;div style=&apos;font-size:14px;font-family:verdana; width:600px; align:left;&apos;&gt;&quot;
def checkbox = &quot;&lt;input type=&apos;checkbox&apos; name=&apos;value&apos; value=&apos;false&apos; style=&apos;display:inline;&apos;&gt;&quot;
def desc = &quot;If checked log output will be verbose.&quot;
def closediv = &quot;&lt;/div&gt;&quot;
return opendiv + checkbox + desc + closediv</script>
              <sandbox>false</sandbox>
            </secureScript>
            <secureFallbackScript plugin="script-security@1.54">
              <script>return &quot;Error creating verbose selection&quot;</script>
              <sandbox>false</sandbox>
            </secureFallbackScript>
          </script>
          <projectName>kuali-pdf</projectName>
          <parameters class="linked-hash-map"/>
          <referencedParameters></referencedParameters>
          <choiceType>ET_FORMATTED_HTML</choiceType>
          <omitValueField>false</omitValueField>
        </org.biouno.unochoice.DynamicReferenceParameter>
        <org.biouno.unochoice.DynamicReferenceParameter plugin="uno-choice@2.1">
          <name>LANDSCAPE</name>
          <description></description>
          <randomName>choice-parameter-8282566762271781</randomName>
          <visibleItemCount>1</visibleItemCount>
          <script class="org.biouno.unochoice.model.GroovyScript">
            <secureScript plugin="script-security@1.54">
              <script>def picklist = new StringBuilder(&quot;&lt;select name=&apos;value&apos; style=&apos;width:50px;font-family:monospace;&apos;&gt;&quot;)
picklist.append(&quot;&lt;option selected=true value=&apos;sb&apos;&gt;sb&lt;/option&gt;&quot;)
picklist.append(&quot;&lt;option value=&apos;ci&apos;&gt;ci&lt;/option&gt;&quot;)
picklist.append(&quot;&lt;option value=&apos;qa&apos;&gt;qa&lt;/option&gt;&quot;)
picklist.append(&quot;&lt;option value=&apos;stg&apos;&gt;stg&lt;/option&gt;&quot;)
picklist.append(&quot;&lt;option value=&apos;prod&apos;&gt;prod&lt;/option&gt;&quot;)
picklist.append(&quot;&lt;/select&gt;&quot;)

def opendiv = &quot;&lt;div style=&apos;font-size:14px;font-family:verdana; width:600px; align:left;&apos;&gt;&quot;
def desc = &quot;&amp;nbsp;&amp;nbsp;What landscape is the target EC2 instance(s) in?&quot;
def closediv = &quot;&lt;/div&gt;&quot;
return opendiv + picklist.toString() + desc + closediv + &quot;&lt;br&gt;&lt;br&gt;&quot;</script>
              <sandbox>false</sandbox>
            </secureScript>
            <secureFallbackScript plugin="script-security@1.54">
              <script>return &quot;&lt;input type=&apos;text&apos; name=&apos;value&apos; value=&apos;error&apos; style=&apos;width:400px;font-family:monospace&apos; disabled=true&gt;&quot;</script>
              <sandbox>false</sandbox>
            </secureFallbackScript>
          </script>
          <projectName>kuali-pdf</projectName>
          <parameters class="linked-hash-map"/>
          <referencedParameters></referencedParameters>
          <choiceType>ET_FORMATTED_HTML</choiceType>
          <omitValueField>false</omitValueField>
        </org.biouno.unochoice.DynamicReferenceParameter>
        <org.biouno.unochoice.DynamicReferenceParameter plugin="uno-choice@2.1">
          <name>UPDATE_IMAGE</name>
          <description></description>
          <randomName>choice-parameter-70828423227469429</randomName>
          <visibleItemCount>1</visibleItemCount>
          <script class="org.biouno.unochoice.model.GroovyScript">
            <secureScript plugin="script-security@1.54">
              <script>def opendiv = &quot;&lt;div style=&apos;font-size:14px;font-family:verdana; width:600px; align:left;&apos;&gt;&quot;
def checkbox = &quot;&lt;input type=&apos;checkbox&apos; name=&apos;value&apos; value=&apos;false&apos; style=&apos;display:inline;&apos;&gt;&quot;
def desc = &quot;Put a new kualico research-pdf docker image into our ECR repository&quot;
def closediv = &quot;&lt;/div&gt;&quot;
return opendiv + checkbox + desc + closediv</script>
              <sandbox>false</sandbox>
            </secureScript>
            <secureFallbackScript plugin="script-security@1.54">
              <script>return &quot;Error creating update_image selection&quot;</script>
              <sandbox>false</sandbox>
            </secureFallbackScript>
          </script>
          <projectName>kuali-pdf</projectName>
          <parameters class="linked-hash-map"/>
          <referencedParameters></referencedParameters>
          <choiceType>ET_FORMATTED_HTML</choiceType>
          <omitValueField>false</omitValueField>
        </org.biouno.unochoice.DynamicReferenceParameter>
        <org.biouno.unochoice.DynamicReferenceParameter plugin="uno-choice@2.1">
          <name>DOCKER_IMAGE</name>
          <description></description>
          <randomName>choice-parameter-70667680918360775</randomName>
          <visibleItemCount>1</visibleItemCount>
          <script class="org.biouno.unochoice.model.GroovyScript">
            <secureScript plugin="script-security@1.54">
              <script>import jenkins.*
import jenkins.model.* 
import hudson.*
import hudson.model.*
def jenkinsCredentials = com.cloudbees.plugins.credentials.CredentialsProvider.lookupCredentials(
        com.cloudbees.plugins.credentials.Credentials.class,
        Jenkins.instance,
        null,
        null
);

def sb = new StringBuilder(&quot;&lt;div style=&apos;font-size:14px;font-family:verdana;&apos;&gt;&quot;)
if(UPDATE_IMAGE.length() &gt; 1) {
        sb.append(&quot;&lt;table cellspadding=5&gt;&lt;tr&gt;&lt;td colspan=2&gt;&quot;)
        sb.append(&quot;&lt;b&gt;You have chosen to get a new docker image from kualico&lt;/b&gt;&lt;br&gt;&quot;)
        sb.append(&quot;&lt;ol&gt;&quot;)
        sb.append(&quot;&lt;li&gt;The image selected from the picklist on the right will be downloaded &lt;br&gt;from the kualico dockerhub account&lt;br&gt;&amp;nbsp;&lt;/li&gt;&quot;)
        sb.append(&quot;&lt;li&gt;The downloaded image will be tagged and uploaded to our AWS ecr registry&lt;br&gt;&amp;nbsp;&lt;/li&gt;&quot;)
        sb.append(&quot;&lt;li&gt;The AWS ec2 application host server(s) will be issued a command &lt;br&gt;to pull the image from ecr and restart containers from it.&lt;/li&gt;&quot;)
        sb.append(&quot;&lt;/ol&gt;&quot;)
        sb.append(&quot;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&quot;)
        sb.append(&quot;&lt;th&gt;BU ecr images&lt;/th&gt;&lt;th&gt;Kualico images&lt;/th&gt;&lt;/tr&gt;&quot;)
}
else {
        sb.append(&quot;&lt;table cellpadding=5&gt;&lt;tr&gt;&lt;td&gt;&quot;)
        sb.append(&quot;&lt;b&gt;Using docker image already in our ecr repository&lt;/b&gt;&lt;br&gt;&quot;)
        sb.append(&quot;&lt;ol&gt;&quot;)
        sb.append(&quot;&lt;li&gt;Select a research-pdf docker image by version from the picklist below&lt;br&gt;&amp;nbsp;&lt;/li&gt;&quot;)
        sb.append(&quot;&lt;li&gt;The AWS ec2 application host server(s) will be issued a command &lt;br&gt;to pull that image from ecr whose version is selected here &lt;br&gt;and restart containers from it.&lt;/li&gt;&quot;)
        sb.append(&quot;&lt;/ol&gt;&quot;)
        sb.append(&quot;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&quot;)
        sb.append(&quot;&lt;th align=&apos;left&apos;&gt;BU ecr images&lt;/th&gt;&lt;/tr&gt;&quot;)
}
sb.append(&quot;&lt;tr&gt;&lt;td&gt;&quot;)

// Create the picklist for ECR images
sb.append(&quot;&lt;select name=&apos;value&apos; style=&apos;width:150px;font-family:monospace;&apos;&gt;&quot;)
def ecrCmd = &quot;aws ecr list-images --registry-id 730096353738 --repository-name research-pdf | jq &apos;.imageIds[].imageTag&apos; | sed &apos;s/\&quot;//g&apos;&quot;
def ecrCmdArr = [ &quot;sh&quot;, &quot;-c&quot;, ecrCmd ]
def ecrCmdProcess = new ProcessBuilder(ecrCmdArr).start()
ecrCmdProcess.inputStream.eachLine {
   // IMPORTANT: Make sure the value attribute is padded at the end with a space
   sb.append(&quot;&lt;option value=&apos;${it} &apos;&gt;${it}&lt;/option&gt;&quot;)
}
ecrCmdProcess.waitFor()
sb.append(&quot;&lt;/select&gt;&quot;)

// If indicated, create the picklist for kuali registry images
if(UPDATE_IMAGE.length() &gt; 1) {
        sb.append(&quot;&lt;td&gt;&quot;)

        // Get the github personal access token
        def token = &quot;unknown&quot;
        for (creds in jenkinsCredentials) {
            if ( &quot;credentials.bu.github.token&quot;.equals(creds.id)) {
                token = creds.secret
                break;
            }
        }

        // Get the raw content of the dockerhub.sh file using the token and execute it. Output will be a list of docker images.
        def cmd = 
              &quot;curl&quot; +
              &quot;  -H &apos;Authorization: token ${token}&apos;&quot; +
              &quot;  -L https://api.github.com/repos/bu-ist/kuali-research-docker/contents/dockerhub.sh&quot; +
              &quot;  | jq &apos;.content&apos;&quot; +
              &quot;  | sed &apos;s/\\\\n//g&apos;&quot; + 
              &quot;  | sed &apos;s/\&quot;//g&apos;&quot; + 
              &quot;  | base64 --decode | bash -s &apos;wrh1&apos; &apos;PWD@dockerhub*888&apos; &apos;research-pdf&apos; &apos;kuali&apos;&quot;
        
        def cmdarr = [ &quot;sh&quot;, &quot;-c&quot;, cmd ]
        def process = new ProcessBuilder(cmdarr).start()
        process.waitFor();
        
        // Output the list of docker images to a listbox
        sb.append(&quot;&lt;select name=&apos;value&apos; style=&apos;width:400px;font-family:monospace;&apos;&gt;&quot;)
        process.inputStream.eachLine {
            if( ! &quot;${it}&quot;.endsWith(&quot;:latest&quot;)) {
                sb.append(&quot;&lt;option value=&apos;&quot;).append(&quot;${it}&quot;).append(&quot;&apos;&gt;&quot;).append(&quot;${it}&quot;).append(&quot;&lt;/option&gt;&quot;)
            }
        }
        process.waitFor();
        sb.append(&quot;&lt;/select&gt;&quot;)
        sb.append(&quot;&lt;/td&gt;&quot;)
}

sb.append(&quot;&lt;/tr&gt;&lt;/table&gt;&lt;div&gt;&quot;)
return sb.toString()</script>
              <sandbox>false</sandbox>
            </secureScript>
            <secureFallbackScript plugin="script-security@1.54">
              <script>return &quot;&lt;input type=&apos;text&apos; readonly=true name=&apos;value&apos; value=&apos;error&apos; style=&apos;width:400px; font-family:monospace;&apos; disabled=true&gt;&quot;</script>
              <sandbox>false</sandbox>
            </secureFallbackScript>
          </script>
          <projectName>kuali-pdf</projectName>
          <parameters class="linked-hash-map"/>
          <referencedParameters>UPDATE_IMAGE</referencedParameters>
          <choiceType>ET_FORMATTED_HTML</choiceType>
          <omitValueField>false</omitValueField>
        </org.biouno.unochoice.DynamicReferenceParameter>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <jdk>(System)</jdk>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>[ &quot;$(echo $VERBOSE | sed &apos;s/,//g&apos;)&quot; == false ] &amp;&amp; set +x

# Static and private variables
CLI=/var/lib/jenkins/jenkins-cli.jar
HOST=http://localhost:8080/
EC2_IDS=()
CMDS=()

# Fix the trailing comma issue with active choices parameters reactive
DEBUG=&quot;$(echo $DEBUG | sed &apos;s/,//g&apos;)&quot;
LANDSCAPE=&quot;$(echo $LANDSCAPE | sed &apos;s/,//g&apos;)&quot;
DOCKER_IMAGE=&quot;$(echo $DOCKER_IMAGE | sed &apos;s/,//g&apos;)&quot;
# The two &quot;parts&quot; were separated with a space character
parts=($DOCKER_IMAGE)
BU_VERSION=${parts[0]}
KUALICO_IMAGE=${parts[1]}


if [ -n &quot;$KUALICO_IMAGE&quot; ] ; then
   CMD=&quot;java -jar ${CLI} -s ${HOST} build &apos;kuali-pdf-1-update-docker-image&apos; -v -f \
     -p VERBOSE=${VERBOSE} \
     -p KUALICO_IMAGE=${KUALICO_IMAGE}&quot;
     CMDS[${#CMDS[@]}]=$CMD
fi

case &quot;$LANDSCAPE&quot; in
   &quot;sb&quot;)
      EC2_IDS=(&quot;i-099de1c5407493f9b&quot; &quot;i-0c2d2ef87e98f2088&quot;);;
   &quot;ci&quot;)
      BRANCH=&quot;bu-master&quot;
      EC2_IDS=(&quot;i-0258a5f2a87ba7972&quot; &quot;i-0511b83a249cd9fb1&quot;);;      
   &quot;qa&quot;)
      EC2_IDS=(&quot;i-011ccd29dec6c6d10&quot;);;
   &quot;stg&quot;)
      EC2_IDS=(&quot;i-090d188ea237c8bcf&quot; &quot;i-0cb479180574b4ba2&quot;);;
   &quot;prod&quot;)
      EC2_IDS=(&quot;i-0534c4e38e6a24009&quot; &quot;i-07d7b5f3e629e89ae&quot;);;
esac

for i in $(seq ${#EC2_IDS[@]}); do    
   CMD=&quot;java -jar ${CLI} -s ${HOST} build &apos;kuali-pdf-2-run-docker-container&apos; -v -f \
     -p VERBOSE=${VERBOSE} \
     -p BLAST_IMAGE=true \
     -p GIT_BRANCH=master \
     -p GIT_REPO_URL=git@github.com:bu-ist/kuali-research-docker.git \
     -p LANDSCAPE=${LANDSCAPE} \
     -p EC2_INSTANCE_ID=${EC2_IDS[i-1]}&quot;
     CMDS[${#CMDS[@]}]=$CMD       
done;

source /var/lib/jenkins/cli-credentials.sh
for ((i = 0; i &lt; ${#CMDS[@]}; i++)) ; do
  CMD_PRINTABLE=&quot;$(echo &quot;${CMDS[i]}&quot; | sed &apos;s/[[:space:]][[:space:]]*\-p/\n\0/g&apos;)&quot;
  printf &quot;\n$CMD_PRINTABLE\n&quot;
  [ &quot;$DEBUG&quot; == false ] &amp;&amp; eval &quot;${CMDS[i]}&quot;
done

printf &quot;\n\nBuild Completed!&quot;</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <hudson.plugins.ws__cleanup.PreBuildCleanup plugin="ws-cleanup@0.37">
      <deleteDirs>false</deleteDirs>
      <cleanupParameter></cleanupParameter>
      <externalDelete></externalDelete>
      <disableDeferredWipeout>false</disableDeferredWipeout>
    </hudson.plugins.ws__cleanup.PreBuildCleanup>
  </buildWrappers>
</project>